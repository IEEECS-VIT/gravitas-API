<!DOCTYPE html>
<html lang="en" ng-app="app">

<head>
  <title> Registration </title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


  <!--STYLES-->
  <link rel="stylesheet" href="/bower_components/normalize.css/normalize.css">
  <link rel="stylesheet" href="/bower_components/milligram/dist/milligram.min.css">
  <link rel="stylesheet" href="/bower_components/toastr/toastr.min.css"/>
  <link rel="stylesheet" href="/bower_components/chosen/chosen.css" />
  <link rel="stylesheet" href="/bower_components/vex/css/vex.css" />
  <link rel="stylesheet" href="/bower_components/vex/css/vex-theme-os.css" />
  <!--STYLES END-->


  <script src="/bower_components/jquery/dist/jquery.min.js"></script>
  <script src="/bower_components/vex/js/vex.combined.min.js"></script>
  <script>vex.defaultOptions.className = 'vex-theme-os';</script>
  <script src="/bower_components/angular/angular.min.js"></script>
  <script src="/bower_components/toastr/toastr.min.js"></script>
  <script src="/bower_components/chosen/chosen.jquery.js"></script>
  <style media="screen">
      .blackbutton{
          background-color: black;
          border-color: black;
      }
      .black{
          color:black;
      }
  </style>
</head>

<body>

  <div class="container" ng-controller="OrganizerCtrl">
      <div class="row">
          <div class="column column-80">
              <h1 class="black"><b>Organizer Portal - </b></h1>
          </div>
        <div class="column">
            <a class="button blackbutton" href="/organizer">Home</a>
            <a class="button" href="/logout">Logout</a> </button>
        </div>
    </div>
    <div class="row">
      <div class="column column-40" ng-form="find">
          <section id="find">
              <button class="button blackbutton" ng-click="confirm('refresh the data?', init);" > New </button>
              <br>
              <h2 class="black"> Find Participant </h2>

              <label class="label-inline">
                  Registration Number
              </label>
              <input type="text" name="id" id="id" ng-keypress="$event.keyCode==13 && find.$valid ? ( !found ? findParticipant() : editDetail() ) : null " required ng-model="participant._id" ng-blur="participant._id=participant._id.toUpperCase()" ng-change="participant._id=participant._id.toUpperCase()"/>
              <button class="button button-outline" ng-disabled="found || find.id.$invalid" ng-click="findParticipant()" > Find </button>
              <button ng-if="found" class="button button-outline" ng-disabled="!(found || find.id.$invalid)" ng-click="editDetail()" > Edit </button>
          </section>
      </div>
      <div ng-form="detail" class="column column-40 column-offset-20"  ng-if="(found != null && created==false) || editParticipant">
        <section id="details">
          <h2> Participant Details </h2>
          <label>
            Name:
            <input type="text" name="name" id="name" required ng-model="participant.name"/>
          </label>
          <label>
            Phone:
            <input type="text" name="phone" id="phone" required ng-model="participant.phone"/>
          </label>
          <label>
            Email:
            <input type="email" name="email" id="email" required ng-model="participant.email"/>
          </label>
          <label>
            Room Number:
            <input type="text" name="room" ng-keypress="$event.keyCode==13 && detail.$valid ? ( editParticipant ? updateParticipant() : createParticipant() ): null " id="room" required ng-model="participant.room"/>
          </label>
          <label>
              Gender:
              <small>Male </small><input type="radio" name="gender" value="male" id="male" ng-model="participant.gender"/>
              <small>Female </small><input type="radio" name="gender" value="female" id="female" ng-model="participant.gender"/>
          </label>
          <button ng-if="!editParticipant" class="button button-outline" type="submit" ng-click="createParticipant()" ng-disabled="found || detail.$invalid" > Create Participant </button>
          <button ng-if="editParticipant" class="button button-outline" type="submit" ng-click="updateParticipant()" ng-disabled="detail.$invalid" > Update Participant </button>
        </section>
      </div>

      <div class="column column-40 column-offset-20"  ng-if="created && !editParticipant">
        <section id="details">
          <h2> Participant Details </h2>
          <label> Name: {{participant.name}}</label>
          <label> Phone: {{participant.phone}} </label>
          <label> Email: {{participant.email}} </label>
          <label> Room Number: {{participant.room}} </label>
          <label> Gender: {{participant.gender}} </label>
          <h3>Events Registered - </h3>
          <ul>
              <li ng-repeat="data in participant.events track by $index">
                  {{data}}
              </li>
          </ul>
        </section>
      </div>
    </div>
    <section ng-form="events" id="events">
      <h2 class="black"> Search for Events </h2>

      <div class="row">
        <div class="column column-40" >
          <input type="search" ng-model="searchQuery.$" placeholder="search query" value="" />
        </div>
        <div class="column column-10">
            <select ng-model="searchQuery.subCategory" ng-options="val for val in eventCategories">
            </select>
        </div>
        <div class="column column-10" >
          <input type="number" min="0" ng-model="searchLimit" placeholder="limit"/>
        </div>
      </div>

      <div class="row">
        <div class="column column-60" >
          <table>
            <tr ng-repeat="e in eventData | filter: searchQuery | limitTo:searchLimit">

                <td ng-bind="e.name"></td>
                <td ng-bind="e.category"></td>
                <td> <span> {{ e.organization.join(',') }} </span> </td>
                <td ng-bind="e.subCategory"></td>
                <td ng-bind="e.participationFee"></td>
                <td> <button class="button button-primary" ng-click="show(e.name);"> Show </button> </td>

            </tr>
          </table>
        </div>

    </section>
    <section id="list">
        <h2 class="black"> List of Participants </h2>
        <h4> Event Name: <span class="black">{{ selectedEvent }}</span></h4>
        <div class="row">
          <div class="column column-60" >
            <table ng-if="eventParticipants.length">
                <thead class="black">
                    <tr>
                        <td>
                            Registration Number
                        </td>
                        <td>
                            Receipt ID
                        </td>
                    </tr>
                </thead>
              <tr ng-repeat="e in eventParticipants">

                  <td ng-bind="e.participantId"></td>
                  <td ng-bind="e._id"></td>

              </tr>
            </table>
            <span ng-if="!eventParticipants.length" class="black">No registrations so far!<br>Good Luck!</span>
          </div>
    </section>

<!--

    <section ng-form="reg" id="register" ng-if="found == true">
      <h2 class="black"> Register for Events </h2>

      <div class="row">
        <div class="column column-40" >
          <input type="search" ng-model="searchQuery.$" placeholder="search query" value="" />
        </div>
        <div class="column column-10">
            <select ng-model="searchQuery.subCategory" ng-options="val for val in eventCategories">
            </select>
        </div>
        <div class="column column-10" >
          <input type="number" min="0" ng-model="searchLimit" placeholder="limit"/>
        </div>
      </div>

      <div class="row">
        <div class="column column-60" >
          <table>
            <tr ng-repeat="e in eventData | filter: searchQuery | limitTo:searchLimit">

                <td ng-bind="e.name"></td>
                <td ng-bind="e.category"></td>
                <td> <span> {{ e.organization.join(',') }} </span> </td>
                <td ng-bind="e.subCategory"></td>
                <td ng-bind="e.participationFee"></td>
                <td> <button class="button button-primary" ng-click="addEvent(e.name, e.participationFee)"> Add </button> </td>

            </tr>
          </table>
        </div>

        <div class="column column-30">
          <table>
            <tr ng-repeat = "event in events">
              <td> {{ event.name }}</td>
              <td>  <button class="button button-primary" ng-click="deleteEvent($index)"> delete </button></td>
            </tr>
          </table>
        </div>
      </div>
      <a class="button blackbutton" href="#checkout" ng-disabled="reg.$invalid"> Checkout </a>
    </section>
    <section id="checkout">

        <h2 class="black">Checkout</h2>

        <div class="row">
          <div class="column column-80 column-offset-10">
              <div class="row">
                  <div class="column column-70 column-offset-10">
                      <table>
                          <thead>
                              <tr>
                                  <td>Name</td>
                                  <td>Participation fee</td>
                              </tr>
                          </thead>
                        <tr ng-repeat = "event in events">
                          <td> {{ event.name }}</td>
                          <td> {{ event.price }}  </td>
                          <td>  <button class="button button-primary" ng-click="deleteEvent($index)"> delete </button></td>
                        </tr>
                        <tr>
                            <td><h4>subtotal</h4></td>
                            <td>{{ computeSubTotal()   }}</td>
                            <td></td>
                        </tr>
                      </table>
                  <div class="row">
                      <label>
                          <h3>Payment:
                          <small>Cash </small><input type="radio" name="payment" value="cash" id="cash" ng-model="participant.payment.paymentType" />
                          <small>Card </small><input type="radio" name="gender" value="card" id="card" ng-model="participant.payment.paymentType" />
                            </h3>
                      </label>
                      <label ng-if="participant.payment.paymentType=='card'">
                          Transcation ID: <input type="text" name="id" id="id" required ng-model="participant.payment.transactionId"/>
                      </label>
                  </div>
                </div>
              </div>
              <br>
              <button class="button blackbutton" ng-disabled="reg.$invalid" ng-click="confirm('start registration process?', submit);" > Register </button>
              <button class="button blackbutton" ng-click="confirm('refresh the data?', init);" > New </button>
          </div>
        </div>
    </section>

-->
  </div>



  <script>
      toastr.options = {
      "closeButton": true,
      "debug": false,
      "newestOnTop": true,
      "progressBar": false,
      "positionClass": "toast-top-right",
      "preventDuplicates": false,
      "onclick": null,
      "showDuration": "300",
      "hideDuration": "1000",
      "timeOut": "5000",
      "extendedTimeOut": "1000",
      "showEasing": "swing",
      "hideEasing": "linear",
      "showMethod": "fadeIn",
      "hideMethod": "fadeOut"
    }
    var app = angular.module('app', []);
    app.controller('OrganizerCtrl', ['$scope', '$http', function ($scope, $http) {

      $http.defaults.headers.common['Accept'] = 'application/json';
      var content = `Please Wait...<br>Payment in progress!`;
      $scope.init = function(){
          console.log("Init!");
          $scope.searchQuery = '';
          $scope.sum=0;
          $scope.searchLimit = 5;
          $scope.selectedEvent = null;
          $scope.participant = {
            _id: null,
            name: null,
            phone: null,
            email: null,
            room: null,
            gender: null,
            payment : {
                paymentType:'cash',
                transactionId:null
            }
          };
          $scope.created = false;
          $scope.found = null;
          $scope.editParticipant = false;
          $scope.eventParticipants = [];
          $scope.events = [];
      }
      $scope.init();

      $scope.show = function(eventID){
          $scope.eventParticipants = [];
          $http.get('/organizer/event/'+eventID)
          .then(function success(response) {
              $scope.selectedEvent = eventID;
              var data = response.data.participantIds;
              if(data.length){
                  //.map(function(e){return e.participantId});
                  $scope.eventParticipants = data;
              }
              window.location.href=('#list')
            toastr["success"](eventID, "Event Found");
            console.log(response.data);
          },function error(response){
            $scope.found = false;
            $scope.participant.gender="male";
            toastr["error"]("Enter Participant details","Participant Not Found!");
          });
      }

      $http.get('/api/events/list').then(function (res)
      {
        $scope.eventData = res.data.events;
        $scope.eventCategories = ["online", "chemical/bio", "informals", null, "builtrix", "applied engineering", "bits and bytes", "circuitrix", "quiz", "robotics", "debate - discussion"];
        $('chosen-select').chosen();
      },
      function (res)
      {
        toastr["error"]("Please check your internet connection.");
      })

      $scope.editDetail = function(){
          $scope.editParticipant = true;
          toastr["info"]($scope.participant._id+"\n"+$scope.participant.name, "Edit Participant Details")
      }

      $scope.findParticipant = function() {
        var params = { id: $scope.participant._id };
        $http.get('/organizer/participant', { params: params })
        .then(function success(response) {
          $scope.participant = {
            _id: response.data.participant._id,
            name: response.data.participant.name,
            phone : response.data.participant.phone,
            email : response.data.participant.email,
            gender : response.data.participant.gender,
            room : response.data.participant.room,
            events : getEventID(response.data.events)
          };
          $scope.found = true;
          $scope.created = true;
            toastr["success"]($scope.participant._id+"\n"+$scope.participant.name, "Participant Found")
          console.log(response.data);
        },function error(response){
          $scope.found = false;
          $scope.participant.gender="male";
          toastr["error"]("Enter Participant details","Participant Not Found!");
        });
      };
      getEventID = function (obj) {
          res = [];
          for(var i=0; i<obj.length; i++){
              for(var j=0; j<obj[i].eventIds.length; j++){
                  res.push(obj[i].eventIds[j]);
              }
          }
          return res;
      }
      $scope.createParticipant = function() {
        $http.post('/organizer/participant', $scope.participant)
        .then(function success(response) {
          toastr["success"]($scope.participant._id+"\n"+$scope.participant.name, "Participant created!")
          $scope.found = true;
          $scope.created = true;
        }, function error (response) {
          console.log(response)
          toastr["error"]("Please check your internet connection.","Participant could not be created!");
        })
      };
      $scope.updateParticipant = function() {
          $http.post('/organizer/updateParticipant', $scope.participant)
          .then(function success(response){
              toastr["success"]($scope.participant._id+"\n"+$scope.participant.name, "Participant details updated!")
              $scope.found = true;
              $scope.created = true;
              $scope.editParticipant = false;
          }, function error (response) {
            console.log(response)
            toastr["error"]("Please check your internet connection.","Participant details could not be updated!");
          })
        };

      $scope.addEvent = function(name, price) {
        $scope.events.push({name: name, price:price});

      }

      $scope.deleteEvent = function(index) {
        $scope.events.splice(index, 1);

      }
      var invalid = function(){
          var temp = $scope.events;
          var alreadyReg = $scope.participant.events;
          console.log($scope.events);
          if(!temp.length){
              toastr["error"]("Please select atleast one event.", "No event selected!");
              return true;
          }
          for (var i = 0; i < temp.length; i++) {
              for (var j = i + 1; j < temp.length; j++) {
                  if (temp[i].name == temp[j].name) {
                      toastr["error"]("The event list contains duplicate entry! Please correct that and retry submitting the form.", "Duplicate Error!");
                      return true;
                  }
              }
          }
          if($scope.participant.events){

              for (var i = 0; i < temp.length; i++) {
                  for (var j = 0; j < alreadyReg.length; j++) {
                      if (temp[i].name == alreadyReg[j]) {
                          toastr["error"]("There's an event already registered! Please delete that and retry submitting the form.", "Duplicate Error!");
                          return true;
                      }
                  }
              }

            }
          return false;
      }

      $scope.computeSubTotal = function()
      {
          if ($scope.events.length == 0)
          {
              return 0;
          }
          return $scope.events.map(function(e){return e.price}).reduce(function(a,b){return a+b;});
      }

      $scope.checkout = function(){
          //if(invalid()){return;}
          var defaultOptions={
                content: content,
                showCloseButton: false,
                escapeButtonCloses: false,
                overlayClosesOnClick: false,
                appendLocation: 'body',
                className: "vex-theme-os",
                css: {},
                overlayClassName: '',
                overlayCSS: {},
                contentClassName: '',
                contentCSS: {},
                closeClassName: '',
                closeCSS: {}
            }
            vex.open(defaultOptions, function(data){
                console.log(data);
            });
            //$rootscope.events = $scope.events;
/*            $fancyModal.open({
                    template: content,
                    controller: 'RegistrationCtrl',
                    resolve:{
                        items: function(){return $scope.events;}
                    }
                });*/
      }
      $scope.confirm = function(m, cb){
          vex.dialog.confirm(
          {
              message: "Are you sure you want to "+m,
              callback : function(value){
                  if(value){
                      cb();
                      $scope.$apply();
                  }
              },
              buttons: [
                        $.extend({}, vex.dialog.buttons.YES, {
                          text: 'Yes'
                        }), $.extend({}, vex.dialog.buttons.NO, {
                          text: 'No'
                        })
                    ]
            }
         );
      }
      $scope.submit = function() {
         if(invalid()){return;}
         console.log($scope.events);
         var payload = {
           participantId: $scope.participant._id,
           payment: $scope.participant.payment,
           eventIds: $scope.events.map(function(event) { return event.name; })
         };
         $scope.checkout();
         $http.post('/registration/register', payload)
         .then(function success(response) {
          //alert('registration created.');
          toastr["success"]($scope.participant._id+"\n"+$scope.participant.name, "Registration Successful!")
          vex.close();
        }, function error (response) {
          console.log(JSON.stringify(response, null, 2))
          //alert('please check your internet connection.');
          toastr["error"]("Please check your internet connection.","Registration failed!");
            vex.close();
        })
      }
    }]);
  </script>

</body>

</html>
