<!DOCTYPE html>
<html ng-app="app">

<head>
  <title>Home</title>

  <!-- Viewport mobile tag for sensible mobile support -->
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


  <!--STYLES-->
  <link rel="stylesheet" href="/bower_components/normalize.css/normalize.css">
  <link rel="stylesheet" href="/bower_components/milligram/dist/milligram.min.css">
  <link rel="stylesheet" href="/bower_components/vex/css/vex.css" />
  <link rel="stylesheet" href="/bower_components/vex/css/vex-theme-os.css" />
  <link rel="stylesheet" href="/bower_components/toastr/toastr.min.css"/>
  <link rel="stylesheet" href="/bower_components/vex/css/vex.css" />
  <link rel="stylesheet" href="/bower_components/vex/css/vex-theme-os.css" />


  <!--STYLES END-->

  <script src="/bower_components/jquery/dist/jquery.min.js"></script>
  <script src="/bower_components/angular/angular.min.js"></script>
  <script src="/bower_components/ng-csv/build/ng-csv.min.js"></script>
  <script src="/bower_components/angular-sanitize/angular-sanitize.min.js"></script>
  <script src="/bower_components/vex/js/vex.combined.min.js"></script>
  <script>vex.defaultOptions.className = 'vex-theme-os';</script>
  <script src="/bower_components/toastr/toastr.min.js"></script>


  <!--Inline style end-->
</head>

<body ng-controller="HomeCtrl">

  <div class="container">
    <div class="row">
      <div class="column column-50 column-offset-25">

        <h1>Export </h1>
        <label>
          Start Date:
          <input type="date" name="startDate" ng-model="startDate" required>
        </label>
        <label>
          End Date:
          <input type="date" name="endDate" ng-model="endDate" required>
        </label>
        <label>
          <select name="eventName" ng-model="eventName" ng-options="name for name in eventNames">
          </select>
        </label>
        <label>
            Gender:
            <small>All </small><input type="radio" name="gender" value="all" ng-model="gender" />
            <small>Male </small><input type="radio" name="gender" value="male" ng-model="gender" />
            <small>Female </small><input type="radio" name="gender" value="female" ng-model="gender" />
        </label>
        <label>
            Payment Type:
            <small>All </small><input type="radio" name="paymentType" value="all" ng-model="paymentType" />
            <small>Card </small><input type="radio" name="paymentType" value="card" ng-model="paymentType" />
            <small>Cash </small><input type="radio" name="paymentType" value="cash" ng-model="paymentType" />
        </label>

        <button type="button" ng-disabled="working" ng-csv="getArray" filename="export.csv">Export</button>

      </div>
    </div>
  </div>


  <script>

  var app = angular.module('app', ['ngSanitize', 'ngCsv']);
    app.controller('HomeCtrl', ['$scope', '$http', function ($scope, $http)
    {
        $http.defaults.headers.common['Accept'] = 'application/json';
        $http.get('/organizer/participant/list').then(participantSuccess, failure);
        $http.get('/organizer/receipt/list').then(receiptSuccess, failure);
        $http.get('/api/events/list').then(eventSuccess, failure);

        $scope.participants = null;
        $scope.receipts = null;
        $scope.events = null;
        $scope.records = [];
        $scope.working = true;
        $scope.eventNames = ["all"];
        $scope.gender = "all";
        $scope.paymentType = "all";
        $scope.eventName = "all"
        $scope.startDate = new Date();
        $scope.startDate.setHours(0,0,0);
        $scope.endDate = new Date($scope.startDate.getTime() + 24*60*60*1000)
        var nTasks = 3;

        function failure(response)
        {
            //alert('error');
            toastr["error"]("Please check your internet connection.");

        }
        function participantSuccess(response)
        {
            $scope.participants = response.data.participants;
            complete();
        }

        function receiptSuccess(response)
        {
            $scope.receipts = response.data.receipts;
            complete();
        }

        function eventSuccess(response)
        {
            $scope.events = response.data.events;
            $scope.events.forEach(function (e){
                                $scope.eventNames.push(e.name);
                              });
            complete();
        }

        function complete(){
            nTasks-=1;
            if(nTasks==0){
              toastr["success"]("Data successfully fetched!");
              $scope.convertData();
                setTimeout(function () {
                    $scope.working = false;
                    toastr["success"]("You can now export Excel Sheet!");
                    $scope.$apply();
                }, 5000)
            }
        }

        $scope.convertData = function ()
        {
            console.log('start');

            if ($scope.participants == null || $scope.receipts == null || $scope.events == null )
            {
                console.log('null;')
                return;
            }
            function findParticipantById(id)
            {
                var result = $scope.participants.filter(function (p)
                {
                    return p._id == id;
                });

                if (result.length == 0)
                {
                    return null;
                }
                return result[0];
            }

            function findEventById(id)
            {

                var result = $scope.events.filter(function (e)
                {
                    return e.name == id;
                });


                if (result.length == 0)
                {
                    return null;
                }
                return result[0];
            }

            console.log($scope.receipts);
            $scope.receipts.forEach(function (receipt)
            {

                var participant = findParticipantById(receipt.participantId);
                receipt.eventIds.forEach(function (eventName)
                {
                    var event = findEventById(eventName);
                    $scope.records.push({
                        'receiptId': receipt._id,
                        'timestamp': new Date(Date.parse((receipt.createdAt))),
                        'paymentType' : receipt.payment.paymentType,
                        'participantId' : participant._id,
                        'participantName': participant.name,
                        'gender' : participant.gender,
                        'event': event.name,
                        'fee': event.participationFee,
                        'user': receipt.userId
                    })

                })


            })
        }

        $scope.getArray = function ()
        {
            console.log($scope.records)
            return $scope.records.filter(function(e){
              return $scope.gender=="all" || e.gender==$scope.gender;
            }).filter(function(e){
              return $scope.paymentType=="all" || e.paymentType==$scope.paymentType;
            }).filter(function(e){
              return $scope.startDate<=e.timestamp && $scope.endDate>=e.timestamp;
            }).filter(function(e){
              return $scope.eventName=="all" || $scope.eventName==e.event;
            })
            //return $scope.records;
        }
    }]);
  </script>
</body>

</html>
